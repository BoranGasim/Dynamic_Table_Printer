
CREATE OR REPLACE PROCEDURE prc_method4(p_table_name IN VARCHAR2) IS
     TYPE t_columns IS TABLE OF user_tab_columns%rowtype INDEX BY PLS_INTEGER;
     v_columns         t_columns;
     v_columns_with_commas  VARCHAR2(32767);
     v_number_value     NUMBER;
     v_string_value     VARCHAR2(32767);
     v_date_value       DATE;
     v_output_string    VARCHAR2(32767);
     cur_dynamic        INTEGER;
    
BEGIN
    
      SELECT * BULK COLLECT INTO v_columns
      FROM user_tab_columns
      WHERE table_name = UPPER(p_table_name);
      
      -- Build the list of column names with commas
      v_columns_with_commas := v_columns(1).column_name;
      FOR i IN 2..v_columns.COUNT LOOP
          v_columns_with_commas := v_columns_with_commas || ',' ||v_columns(i).column_name;
      END LOOP;
      
      cur_dynamic := DBMS_SQL.OPEN_CURSOR;
      DBMS_SQL.PARSE(cur_dynamic, 'SELECT ' || v_columns_with_commas || ' FROM ' || p_table_name, DBMS_SQL.NATIVE);
      
    
      FOR idx IN 1..v_columns.COUNT LOOP
          IF v_columns(idx).data_type = 'NUMBER' THEN
              DBMS_SQL.DEFINE_COLUMN(cur_dynamic, idx, 1);
          ELSIF v_columns(idx).data_type IN('VARCHAR2', 'VARCHAR', 'CHAR') THEN
              DBMS_SQL.DEFINE_COLUMN(cur_dynamic, idx, 'dummy text',v_columns(idx).char_length);
          ELSIF v_columns(idx).data_type = 'DATE' THEN
              DBMS_SQL.DEFINE_COLUMN(cur_dynamic, idx, sysdate);
          END IF;
          
          
          v_output_string := v_output_string || ' ' || RPAD(v_columns(idx).column_name, 20);
       END LOOP;
       
       dbms_output.put_line(v_output_string);
       v_number_value := dbms_sql.execute(cur_dynamic);
          
        WHILE DBMS_SQL.FETCH_ROWS(cur_dynamic) > 0 LOOP
              v_output_string := NULL; 
              FOR t IN 1..v_columns.COUNT LOOP
                  IF v_columns(t).data_type = 'NUMBER' THEN
                     DBMS_SQL.COLUMN_VALUE(cur_dynamic, t, v_number_value);
                     v_output_string := v_output_string || ' ' || RPAD(NVL(TO_CHAR(v_number_value), ' '), 20);
                  ELSIF v_columns(t).data_type IN ('VARCHAR2', 'VARCHAR', 'CHAR') THEN
                     DBMS_SQL.COLUMN_VALUE(cur_dynamic, t, v_string_value);
                     v_output_string := v_output_string || ' ' || RPAD(NVL(TO_CHAR(v_string_value), ' '), 20);
                 ELSIF v_columns(t).data_type = 'DATE' THEN
                     DBMS_SQL.COLUMN_VALUE(cur_dynamic, t, v_date_value);
                     v_output_string := v_output_string || ' ' || RPAD(NVL(TO_CHAR(v_date_value),' '), 20);
                 END IF;
               END LOOP;    
            dbms_output.put_line(v_output_string);
        END LOOP;
        
        -- Close the cursor after execution
        DBMS_SQL.CLOSE_CURSOR(cur_dynamic);
        
    EXCEPTION
         WHEN OTHERS THEN
           dbms_output.put_line('Error: ' || SQLERRM);
           IF DBMS_SQL.IS_OPEN(cur_dynamic) THEN
              DBMS_SQL.CLOSE_CURSOR(cur_dynamic);
           END IF;
END;
/
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
              
          
          
          
          
          
          
          